DROP TABLE IF EXISTS Orders;
DROP TABLE IF EXISTS Products;
DROP TABLE IF EXISTS Customers;


CREATE TABLE Customers (
    CUSTOMER_ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100),
    EMAIL VARCHAR(100),
    PHONE VARCHAR(15),
    ADDRESS TEXT
);

CREATE TABLE Products (
    PRODUCT_ID INT PRIMARY KEY,
    PRODUCT_NAME VARCHAR(100),
    CATEGORY VARCHAR(50),
    PRICE INT,         
    STOCK INT
);

CREATE TABLE Orders (
    ORDER_ID INT PRIMARY KEY,
    CUSTOMER_ID INT REFERENCES Customers(CUSTOMER_ID),
    PRODUCT_ID INT REFERENCES Products(PRODUCT_ID),
    QUANTITY INT,
    ORDER_DATE DATE
);

INSERT INTO Customers (CUSTOMER_ID, NAME, EMAIL, PHONE, ADDRESS) VALUES
(101, 'Rahul Verma', 'rahul.verma@gmail.com', '9876543210', 'Delhi'),
(102, 'Priya Nair', 'priya.nair@gmail.com', '9123456780', 'Mumbai'),
(103, 'Arjun Reddy', 'arjun.reddy@gmail.com', '9988776655', 'Hyderabad'),
(104, 'Sneha Kapoor', 'sneha.kapoor@gmail.com', '9090909090', 'Pune'),
(105, 'Vikram Das', 'vikram.das@gmail.com', '9000000000', 'Bangalore'),
(106, 'Anjali Rai', 'anjali.rai@gmail.com', '9100045601', 'Chennai');

INSERT INTO Products (PRODUCT_ID, PRODUCT_NAME, CATEGORY, PRICE, STOCK) VALUES
(201, 'Notebook A4', 'Stationery', 45.00, 100),
(202, 'Ball Pen Blue', 'Stationery', 10.00, 50),
(203, 'Shirts', 'Apparel', 870.00, 0),
(204, 'USB Mouse', 'Electronics', 400.00, 30),
(205, 'Steel Water Bottle', 'Home & Kitchen', 200.00, 20),
(206, 'Laptop Sleeve 14-inch', 'Electronics', 999.00, 8);

INSERT INTO Orders (ORDER_ID, CUSTOMER_ID, PRODUCT_ID, QUANTITY, ORDER_DATE) VALUES
(301, 101, 201, 3, '2024-12-05'),   
(302, 101, 203, 1, '2024-12-15'),    
(303, 102, 204, 2, '2025-01-10'),    
(304, 102, 205, 1, '2025-04-18'),    
(305, 103, 201, 2, '2025-02-12'),    
(306, 103, 202, 5, '2025-03-05'),    
(307, 104, 205, 1, '2025-04-01'),    
(308, 105, 203, 2, '2025-06-08'),    
(309, 105, 204, 1, '2025-06-10');    


SELECT * FROM Orders
WHERE CUSTOMER_ID = 101;

SELECT PRODUCT_ID, PRODUCT_NAME,CATEGORY,PRICE
FROM Products
WHERE STOCK = 0;

SELECT Products.PRODUCT_ID, Products.PRODUCT_NAME,
SUM(Orders.QUANTITY * Products.PRICE) AS TOTAL_REVENUE
FROM Orders
JOIN Products ON Orders.PRODUCT_ID = Products.PRODUCT_ID
GROUP BY Products.PRODUCT_ID,Products.PRODUCT_NAME;

SELECT C.CUSTOMER_ID,C.NAME,
SUM(O.QUANTITY * P.PRICE) AS TOTAL_AMOUNT
FROM Orders O
JOIN Customers C ON O.CUSTOMER_ID = C.CUSTOMER_ID
JOIN Products P ON O.PRODUCT_ID = P.PRODUCT_ID
GROUP BY C.CUSTOMER_ID, C.NAME
ORDER BY TOTAL_AMOUNT DESC
LIMIT 5;

SELECT C.CUSTOMER_ID, C.NAME
FROM Customers C
WHERE C.CUSTOMER_ID IN (
SELECT O.CUSTOMER_ID
FROM Orders O
JOIN Products P ON O.PRODUCT_ID = P.PRODUCT_ID
GROUP BY O.CUSTOMER_ID
HAVING COUNT(DISTINCT P.CATEGORY) >= 2);

SELECT EXTRACT(MONTH FROM ORDER_DATE) AS sale_month,
EXTRACT(YEAR FROM ORDER_DATE) AS sale_year,
SUM(p.PRICE * o.QUANTITY) AS total_sales
FROM Orders o
JOIN Products p ON o.PRODUCT_ID = p.PRODUCT_ID
GROUP BY sale_year, sale_month
ORDER BY total_sales DESC
LIMIT 1;

SELECT p.PRODUCT_ID, p.PRODUCT_NAME
FROM Products p
WHERE p.PRODUCT_ID NOT IN (
SELECT o.PRODUCT_ID
FROM Orders o
WHERE o.ORDER_DATE >= CURRENT_DATE - INTERVAL '6 months');

SELECT c.CUSTOMER_ID, c.NAME
FROM Customers c
WHERE c.CUSTOMER_ID NOT IN (
SELECT o.CUSTOMER_ID
FROM Orders o);

SELECT ROUND(AVG(p.PRICE * o.QUANTITY), 3) AS average_order_value
FROM Orders o
JOIN Products p ON o.PRODUCT_ID = p.PRODUCT_ID;
